# Defaults.

prefix := $(wildcard ~)
colemakerel := .colemakerel

# Flotsam and jetsam.
SHELL := /bin/sh
.DELETE_ON_ERROR:
.NOTPARALLEL:       # mkdir -p may cause race conditions
.SECONDEXPANSION:
.SUFFIXES:

# Template substitution helpers.

nullstring :=
space := $(nullstring) # <--- the space is between the ) and the #

encode = $(subst $(space),SPACE,$(1))
decode = $(subst SPACE, ,$(1))


# Shared template parameters.

HEADER := "\#\#\# Generated by Colemakerel setup: $$(date) \#\#\#\n\n"

SUBSTITUTIONS := $(call encode,s|__PREFIX__|$(prefix)|g)
SUBSTITUTIONS += $(call encode,s|__COLEMAKEREL__|$(colemakerel)|g)


# Treat each child directory listed in VPATH as a "module". Generate
# per-module targets and prerequisites based on directory contents.
# For example:
# - "make vim" / "make vim-install": install Vim-related files
# - "make vim-uninstall": delete Vim-related files
# - "make install": install all files
# - "make uninstall": delete all files

MODULES := $(patsubst %/,%,$(wildcard */))

define load_module
$(1)_FILES := $$(shell find $(1) -type f ! \( -name module.mk -o \
                                              -name '*.sw?' -o \
                                              -name '*~' \))
$(1)_FILES := $$(patsubst $(1)/%,%,$$($(1)_FILES))
$(1)_FILES := $$(patsubst _%,.%,$$($(1)_FILES))
$(1)_FILES := $$(addprefix $$(prefix)/,$$($(1)_FILES))

.PHONY: $(1) $(1)-install $(1)-uninstall
$(1) $(1)-install: $$$$($(1)_FILES)
$(1)-uninstall:
	-rm -R $$($(1)_FILES)
endef

$(foreach module,$(MODULES),$(eval $(call load_module,$(module))))


# Module-specific settings.

include $(addsuffix /module.mk,$(MODULES))


# The default rule does substitutions on the source templates and writes
# them to the output files.

VPATH := $(MODULES)

SED_SCRIPTS := $(foreach sub,$(SUBSTITUTIONS),-e '$(call decode,$(sub))')

REPLACELEADINGDOTWITHUNDERSCORE = $(patsubst .%,_%,$*)
$(prefix)/% : $$(REPLACELEADINGDOTWITHUNDERSCORE)
	@mkdir -p -- "$(dir $@)"
	@printf $(HEADER) > "$@"
	@sed -E $(SED_SCRIPTS) "$<" >> "$@"
	@printf "Wrote $@\n" >&2


# Install and uninstall all modules.

ALL_FILES := $(foreach module,$(MODULES),$($(module)_FILES))

.DEFAULT_GOAL := install
.PHONY: install
install: $(ALL_FILES)

.PHONY: uninstall
uninstall:
	-rm -R $(ALL_FILES)
